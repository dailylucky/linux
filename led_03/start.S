
.global _start

/* __bss_start may generated by ld program according to ld script? */
.global __bss_start
_bss_start:
    .word __bss_start

.global __bss_end
_bss_end:
    .word __bss_end

_start:
    /* enter SVC mode */
    /* opertion on cpsr (special register) need use mrs, msr rather than ldr, str */
    mrs r0, cpsr
    bic r0, r0, #0x1f /* clear r0 5 low bit, that is clear the M0~M4 of cpsr */
    orr r0, r0, #0x13 /* r0 | 0x13, that is using SVC mode */
    msr cpsr, r0

    /* clear bss section */
    ldr r0, _bss_start
    ldr r1, _bss_end
    mov r2, #0
bss_loop:
    stmia r0!, {r2} /* set r2 to [r0] and make r0=r0+1 */
    cmp r0, r1
    ble bss_loop /* if r0 <= r1, jump to bss_loop */

    /* set stack pointer sp */
    ldr sp, =0x80200000
    /* jump to function main */
    b main